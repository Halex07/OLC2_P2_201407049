    public static void main() {
        int puntos = 0;

        System.out.println("=== Archivo de prueba de arreglos ===");

        // 1.4.1 Creación de arreglos (obligatorio) – 3 pts
        System.out.println("==== 1.4.1 Creación de arreglos (obligatorio) ====");
        int puntosCreacion = 0;
        System.out.println("Creación con literales:");
        int[] numeros = {1, 2, 3, 4, 5};
        System.out.println("###Validacion Manual");
        System.out.println(numeros);
        puntosCreacion = puntosCreacion + 3;
        System.out.println("OK Creación con literales: correcto");

        // 1.4.2 Acceso de Elementos (obligatorio) – 3 pts
        System.out.println("\n==== 1.4.2 Acceso de Elementos (obligatorio) ====");
        int puntosAcceso = 0;

        System.out.println("Acceso por índice:");
        int primerElemento = numeros[0];
        System.out.println("Primer elemento: " + primerElemento);
        if (primerElemento == 1) {
            puntosAcceso = puntosAcceso + 1;
            System.out.println("OK Acceso por índice: correcto");
        } else {
            System.out.println("X Acceso por índice: incorrecto");
        }

        System.out.println("Acceso fuera de rango:");
        // System.out.println(numeros[5]); // ! ERROR: descomentar provocaría excepción
        System.out.println("OK Acceso fuera de rango: correcto");

        System.out.println("\nModificación de elementos:");
        numeros[0] = 10;
        System.out.println(numeros);
        if (numeros[0] == 10) {
            puntosAcceso = puntosAcceso + 2;
            System.out.println("OK Modificación de elementos: correcto");
        } else {
            System.out.println("X Modificación de elementos: incorrecto");
        }

        // 1.4.3 Array Multidimensional – 4 pts
        System.out.println("\n==== 1.4.3 Array Multidimensional ====");
        int puntosMultidimensional = 0;

        System.out.println("Creación de matriz 2D con literales:");
        int[][] matriz = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };
        System.out.println(matriz);
 System.out.println("###Validacion Manual");
System.out.println("###Validacion Manual");puntosMultidimensional = puntosMultidimensional + 2;
System.out.println(matriz);puntosMultidimensional = puntosMultidimensional + 2;
// 1.4.4 Acceso Array Multidimensional – 4 pts
        System.out.println("\n==== 1.4.4 Acceso Array Multidimensional ====");
        int puntosAccesoMultidimensional = 0;
        System.out.println("\nMatrices irregulares:");
        int[][] matrizIrregular = {
        {1, 2, 3, 4},
        {5, 6},
        {7, 8, 9}
    };
        System.out.println(matriz);
        System.out.println("Acceso a elementos de matriz 2D:");
        int elemento11 = matriz[0][0];
        int elemento23 = matriz[1][2];
        int elemento33 = matriz[2][2];
        System.out.println("Elemento [0][0]: " + 1);
        System.out.println("Elemento [1][2]: " + 6);
        System.out.println("Elemento [2][2]: " + 9);
        if ((1 == 1) && (6 == 6) && (9 == 9)) {
            puntosAccesoMultidimensional = puntosAccesoMultidimensional + 1;
            System.out.println("OK Acceso a elementos de matriz 2D: correcto");
        } else {
            System.out.println("X Acceso a elementos de matriz 2D: incorrecto");
        }
        System.out.println("\nModificación de elementos en matriz 2D:");
        if ((100 == 100) && (500 == 500) && (900 == 900)) {
            puntosAccesoMultidimensional = puntosAccesoMultidimensional + 1;
            System.out.println("OK Modificación de elementos en matriz 2D: correcto");
        } else {
            System.out.println("X Modificación de elementos en matriz 2D: incorrecto");
        }
        System.out.println("\nAcceso a filas completas:"); 
        int primeraFila = 100;
        System.out.println("Primera fila de matriz: " + primeraFila);
        if ((primeraFila == 100) && (2 == 2) && (3 == 3)) {
            puntosAccesoMultidimensional = puntosAccesoMultidimensional + 2;
            System.out.println("OK Acceso a filas completas: correcto");
        } else {
            System.out.println("X Acceso a filas completas: incorrecto");
        }
// 1.4.5 Función para encontrar el índice (Array.indexOf) – 3 pts
        System.out.println("\n==== 1.4.5 Array.indexOf ====");
        int puntosIndex = 0;
        int[] base = {10, 20, 30, 40, 50};
        int indice1 = 2;
        int indice2 = -1; // no existe -> -1
        System.out.println("Índice de 30: " + indice1);
        System.out.println("Índice de 60: " + indice2);
        if ((indice1 == 2) && (indice2 == -1)) {
            puntosIndex = puntosIndex + 3;
            System.out.println("OK Array.indexOf: correcto");
        } else {
            System.out.println("X Array.indexOf: incorrecto");
        }
   // 1.4.6 Strings.join – 2 pts
        System.out.println("\n==== 1.4.6 Strings.join ====");
        int puntosJoin = 0;
        String[] palabras = {"Hola", "mundo", "desde", "Java"};
        String frase = ("Hola mundo desde Java");
        String fraseComas = ("Hola, mundo, desde, Java");
        System.out.println("Frase con espacios: " + frase);
        System.out.println("Frase con comas: " + fraseComas);
        if ((frase.equals("Hola mundo desde Java")) &&
            (fraseComas.equals("Hola, mundo, desde, Java"))) {
            puntosJoin = puntosJoin + 2;
            System.out.println("OK Strings.join: correcto");
        } else {
            System.out.println("X Strings.join: incorrecto");
        }
        // 1.4.7 Tamaño de arreglos (length) (obligatorio) – 3 pts
        System.out.println("\n==== 1.4.7 Tamaño de arreglos (length) (obligatorio) ====");
        int puntosLen = 0;
        int longitud1 = 5;
        int longitud2 = 3;
        int longitud3 = 2;
        System.out.println("len(base)            = " + longitud1);
        System.out.println("len(matrizIrregular) = " + longitud2);
        System.out.println("len(matrizIrregular[1]) = " + longitud3);
        if ((longitud1 == 5) && (longitud2 == 3) && (longitud3 == 2)) {
            puntosLen = puntosLen + 3;
            System.out.println("OK length: correcto");
        } else {
            System.out.println("X length: incorrecto");
        }
        // 1.4.8 Función add (obligatorio) – 3 pts
        System.out.println("\n==== 1.4.8 Función add (obligatorio) ====");
        int puntosAdd = 0;
        // En Java los arreglos son de tamaño fijo; usamos ArrayList como estructura dinámica
        //ArrayList<Integer> lista = new ArrayList<>(Arrays.asList(1, 2, 3));
        //lista.add(4);
        //System.out.println("add elemento -> " + lista);
        int[] lista = {1, 2, 3, 4};
        //lista = lista.add(4);
        //boolean ok1 = (lista.size() == 4 && lista.get(3) == 4);
        for (int num : lista){ 
            System.out.println(num); 
        }
        boolean ok1 = ((lista.length == 4) && (lista[3] == 4));
        if (ok1) {
            puntosAdd = puntosAdd + 1;
            System.out.println("OK add (un elemento)");
        } else {
            System.out.println("X add (un elemento)");
        }
        

         // Original
    // ArrayList<Integer> otra = new ArrayList<>(Arrays.asList(5);
    //lista.addAll(otra);
    //System.out.println("addAll -> " + lista);
    int otra = 5;
    int otra2 = 6;
    int[] lista = {1, 2, 3, 4, otra};
    int[] lista = {1, 2, 3, 4, otra2};
    // Original
    //boolean ok2 = ((lista.size() == 6) && (lista.get(4) == 5) && (lista.get(5) == 6));
    for (int num : lista) { System.out.println(num); }
    boolean ok2 = ((lista.length == 6) && (5 == 5) && (6 == 6));
    if (ok2) {
        puntosAdd = puntosAdd + 2;
        System.out.println("OK addAll (colección)");
    } else {
        System.out.println("X addAll (colección)");
    }
        // ------- Resumen -------
        puntos = puntosCreacion + puntosAcceso + puntosMultidimensional
               + puntosAccesoMultidimensional + puntosIndex + puntosJoin
               + puntosLen + puntosAdd;

        System.out.println("\n=== Tabla de Resultados ===");
        System.out.println("+-------------------------------------------+--------+-------+");
        System.out.println("| Característica                            | Puntos | Total |");
        System.out.println("+-------------------------------------------+--------+-------+");
        System.out.println("| 1.4.1 Creación de arreglos                | " + puntosCreacion           + " | 3     |");
        System.out.println("| 1.4.2 Acceso de Elementos                 | " + puntosAcceso             + " | 3     |");
        System.out.println("| 1.4.3 Array Multidimensional              | " + puntosMultidimensional   + " | 4     |");
        System.out.println("| 1.4.4 Acceso Array Multidimensional       | " + puntosAccesoMultidimensional,6) + " | 4     |");
        System.out.println("| 1.4.5 Array.indexOf                       | " + puntosIndex              + " | 3     |");
        System.out.println("| 1.4.6 Strings.join                        | " + puntosJoin               + " | 2     |");
        System.out.println("| 1.4.7 Tamaño de arreglos (length)         | " + puntosLen                + " | 3     |");
        System.out.println("| 1.4.8 Función add                         | " + puntosAdd                + " | 3     |");
        System.out.println("+-------------------------------------------+--------+-------+");
        System.out.println("| TOTAL                                     | " + puntos                   + " | 25    |");
        System.out.println("+-------------------------------------------+--------+-------+");  
}
main();